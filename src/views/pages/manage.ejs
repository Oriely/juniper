<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head') %> 
</head>
<body>
    <%- include('../partials/navigation') %> 

    <div class="container center-h">
        <div class="wrapper">
            <div class="sites-list">
                <div class="site-list-row-labels" >
                    <div class="site-name">Site Name</div>
                    <div class="site-description">Site subtitle</div>
                    <div class="site-url">Site URL</div>
                    <div></div>
                </div>
                <% sites.forEach(function (site) { %>
                    <div class="site-list-row" data-siteid="<%= site.id %>">
                        <div class="site-name"><%= site.name %></div>
                        <div class="site-description"><%= site.description %></div>
                        <div class="site-url"><%= site.url %></div>
                        <div class="site-list-controlls">
                            <button class="site-edit" data-siteid="<%= site.id %>"><i class="fa-solid fa-pencil"></i></button>
                            <button class="site-remove" data-siteid="<%= site.id %>"><i class="fa-solid fa-trash-can"></i></button>
                        </div>
                    </div>
                <% }); %>
            </div>
            <form id="add-website-form" enctype="multipart/form-data">
                <div>
                    <label for="site-name">
                        Site name:<br>
                        <input name="site_name" id="site-name" type="text" placeholder="Sonarr" required>
                    </label>
                </div>
                <div>
                    <label for="site-description">
                        Site description:<br>
                        <input name="site_description" id="site-description" type="text" placeholder="TV Series" required>
                    </label>
                </div>
                <div>
                    <label for="site-url">
                        Site URL:<br>
                        <input name="site_url" id="site-url" type="text" placeholder="/sonarr" required>
                    </label>

                </div>
                <div>
                    <label class="upload-logo">
                        <div>
                            Site logo:<br>
                            <label for="upload_logo" class="file-upload">
                                <i class="fa fa-cloud-upload"></i> Upload image
                            </label>
                            <input accept="image/*" id="upload_logo" type="file" name="site_logo">
                        </div>
                        <div class="">
                            <img class="site-logo-preview" src="images/logo.png" alt="">
                        </div>
                    </label>
                </div>
                <div class="form-row error">
                    <div class="error-container">
                        <span class="error-message">
                            Something Something error
                        </span>
                        <button class="error-remove">
                            X
                        </button>
                    </div>
                </div>
                <div>
                    <button id="add-website-button" type="submit">Add site</button>
                    <button id="edit-website-button" type="submit">Edit Site</button>
                </div>
            </form>
        </div>
        <div class="wrapper">

        </div>

    </div>
    <div class="alerts">

    </div>
    <%- include('../partials/scripts') %> 
    <script>



        const uploadLogo = document.getElementById('upload_logo');
        const logoPreview = document.querySelector('.site-logo-preview')

        let isEditing = false;
        let siteEditing = null;
        let currentlyEditing = null;

        const siteList = document.querySelector('.sites-list');
        
    
        function updateSiteList(sites) {
            siteList.innerHTML = `
                <div class="site-list-row-labels" >
                    <div class="site-name">Site Name</div>
                    <div class="site-description">Site subtitle</div>
                    <div class="site-url">Site URL</div>
                    <div></div>
                </div>
            `;
            sites.forEach((site) => {
                siteList.innerHTML += `
                    <div class="site-list-row" data-siteid="${site.id}">
                        <div class="site-name">${site.name}</div>
                        <div class="site-description">${site.description}</div>
                        <div class="site-url">${site.url}</div>
                        <div class="site-list-controlls">
                            <button class="site-edit" data-siteid="${site.id}"><i class="fa-solid fa-pencil"></i></button>
                            <button class="site-remove" data-siteid="${site.id}"><i class="fa-solid fa-trash-can"></i></button>
                        </div>
                    </div>
                `;
            })

            updateListeners();
        }

        async function getSite(id) {
            const response = await fetch('/api/sites/' + id);
            return response.json();
        }

        async function getAllSites() {
            const response = await fetch('/api/sites');
            return response.json();
        }

        function updateRow(id) {
            const site_rows = Array.from(document.querySelectorAll('.site-list-row'));
            const row = site_rows.filter(site_row => site_row.dataset.siteid == id)

            console.log(row[0])
        }

        function updateForm(site, form) { 
            const uploadPreview = document.querySelector('.site-logo-preview');

            uploadPreview.src = site.log
            form['site_name'].value = site.name;
            form['site_description'].value = site.description;
            form['site_url'].value = site.url;
        }

        async function editSite(event, form) {
            const siteId = event.currentTarget.dataset.siteid;
            const site = await getSite(siteId);
            const addSiteForm = form;
            isEditing = true;
            currentlyEditing = site.id;
            siteEditing = siteId;
            updateForm(site, form);
        }

        async function saveEdit(event) {

            if(!isEditing) return;

            const form = event.currentTarget;
            const formData = new FormData(form);

            const response = await fetch('/api/sites/' + currentlyEditing, {
                method: 'PUT',
                body: formData,
            })

            if(response.status === 200) {
                console.log('success')
                const sites = await getAllSites();
                updateSiteList(sites);
                form.reset();
            } else if(response.status === 400) {
                
            } else {
                console.log('something went wrong')
            }
        }

        async function removeSite(event) {
            const siteId = event.currentTarget.dataset.siteid;
            const response = await fetch('/api/sites/' + siteId, {
                method: 'DELETE',
            });

            if(response.status === 200) {
                console.log('success')
                const sites = await getAllSites();
                updateSiteList(sites);
            } else {
                console.log('something went wrong.')
            }

            
        }

        async function addSite(event, form) {
            if(isEditing) return;
            const formData = new FormData(form);
            for (var [key, value] of formData.entries()) { 
                console.log(key, value);
            }
            console.log(...formData)
            const response = await fetch('/api/sites/new', {
                method: 'POST',
                body: formData
            })

            if(response.status === 200) {
                console.log('success')
                const sites = await getAllSites();
                updateSiteList(sites);
                form.reset();
            } else if(response.status === 400) {
                
            } else {
                const test = response.body;
                console.log(test)
                console.log('something went wrong')
                console.log(response);
            }
        }




        uploadLogo.onchange = e => {
            const [file] = uploadLogo.files
            if(file) logoPreview.src = URL.createObjectURL(file)
        }

        const siteForm = document.getElementById('add-website-form');

        siteForm.addEventListener('submit', (event) => {
            event.preventDefault();

            if(event.submitter.id === 'edit-website-button') {
                console.log('test')
                saveEdit(event)
            } else {
                addSite(event, siteForm)
            }
        })

        function updateListeners() {

            const removeSiteBtns = document.querySelectorAll('.site-remove');
            const editSiteBtns = document.querySelectorAll('.site-edit');
            
            removeSiteBtns.forEach((btn) => {
                btn.addEventListener('click', removeSite)
            })
            editSiteBtns.forEach((btn) => {
                btn.addEventListener('click', (event) => editSite(event, siteForm))
            })

        }

        updateListeners();
        let sitelist = null;
        (async () => {
            console.log('test')
            const sitesData = await getAllSites();
                
            sitelist = new SiteList(
                document.querySelector('site-list'),
                sitesData
            );
            console.log('test')
            console.log(sitelist)
        })();


    </script>b

</body>
</html>